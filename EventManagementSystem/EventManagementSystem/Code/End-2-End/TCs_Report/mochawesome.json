{
  "stats": {
    "suites": 5,
    "tests": 25,
    "passes": 25,
    "pending": 0,
    "failures": 0,
    "start": "2025-02-15T18:20:36.244Z",
    "end": "2025-02-15T18:21:26.953Z",
    "duration": 50709,
    "testsRegistered": 25,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f2aa283a-5e2d-4882-828c-a89c210bcdae",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 2663,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "this.timeout(60000); // ‚è≥ Give WebDriver more time to start\ndriver = await new Builder().forBrowser('chrome').build();",
          "err": {},
          "uuid": "611aa444-2354-4c1a-9b60-e18804cebdc3",
          "parentUUID": "f2aa283a-5e2d-4882-828c-a89c210bcdae",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a2c01628-bcad-4e38-aefd-b0085bab2080",
          "title": "TCs for main page",
          "fullFile": "F:\\Testing2\\5_Final_Project2\\Final Project 2\\Code\\frontend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "All Logos & buttons are Displayed and placed",
              "fullTitle": "TCs for main page All Logos & buttons are Displayed and placed",
              "timedOut": false,
              "duration": 2715,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(`${url}/`);\nawait driver.sleep(100); \nlet EM_Text = await driver.findElement(By.xpath(\"//div[text() = 'Event Management']\")).getText();\nlet Home_Text = await driver.findElement(By.xpath(\"//a[text() = 'Home']\")).getText();\nlet LOGIN_Text = await driver.findElement(By.linkText(\"LOGIN\")).getText();\nlet REGISTER_Text = await driver.findElement(By.linkText(\"REGISTER\")).getText();\nlet Login_Text = await driver.findElement(By.css('h5')).getText();\nlet Email_Text = await driver.findElement(By.xpath(\"//label[text() = 'Email']\")).getText();\nlet Pass_Text = await driver.findElement(By.xpath(\"//label[text() = 'Password']\")).getText();\nlet Login_btn = await driver.findElement(By.xpath(\"//button[@type = 'submit']\")).getText();\nexpect(EM_Text).to.be.equal(\"Event Management\");\nexpect(Home_Text).to.be.equal(\"HOME\");\nexpect(LOGIN_Text).to.be.equal(\"LOGIN\");\nexpect(REGISTER_Text).to.be.equal(\"REGISTER\");\nexpect(Login_Text).to.equal(\"Login\");\nexpect(Email_Text).to.include(\"mail\");\nexpect(Pass_Text).to.include(\"Pass\");\nexpect(Login_btn).to.equal(\"LOGIN\");",
              "err": {},
              "uuid": "2b505c3a-9d3d-46b1-949b-dd648a312f80",
              "parentUUID": "a2c01628-bcad-4e38-aefd-b0085bab2080",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Ensuring that LOGIN btn moves us to the current page (main page)",
              "fullTitle": "TCs for main page Ensuring that LOGIN btn moves us to the current page (main page)",
              "timedOut": false,
              "duration": 404,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let Main_Page_URL = await driver.executeScript('return window.location.href;');\nawait driver.findElement(By.xpath(\"//a[text() = 'Login']\")).click();\nlet Current_Page_URL = await driver.executeScript('return window.location.href;');\nexpect(Main_Page_URL).to.equal(Current_Page_URL);",
              "err": {},
              "uuid": "7af37640-cf63-4876-9631-bad6ec2e6a0e",
              "parentUUID": "a2c01628-bcad-4e38-aefd-b0085bab2080",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2b505c3a-9d3d-46b1-949b-dd648a312f80",
            "7af37640-cf63-4876-9631-bad6ec2e6a0e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3119,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "6b1d670e-22ec-4887-8e1e-f760fddef79e",
          "title": "TCs for REGISTER Page",
          "fullFile": "F:\\Testing2\\5_Final_Project2\\Final Project 2\\Code\\frontend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "REGISTER Button moves us to REGISTER Page Successfully",
              "fullTitle": "TCs for REGISTER Page REGISTER Button moves us to REGISTER Page Successfully",
              "timedOut": false,
              "duration": 410,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.findElement(By.linkText('REGISTER')).click();\nlet REGISTER_Elem = await driver.wait(until.elementLocated(By.xpath(\"//h5[text() = 'Register']\")), 5000);\nlet REGISTER_Text = await REGISTER_Elem.getText();\nexpect(REGISTER_Text).to.equal(\"Register\");",
              "err": {},
              "uuid": "432f0c0d-6008-42fd-9bcc-bb272c2cc340",
              "parentUUID": "6b1d670e-22ec-4887-8e1e-f760fddef79e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Form Elements & REGISTER Button are visible",
              "fullTitle": "TCs for REGISTER Page Form Elements & REGISTER Button are visible",
              "timedOut": false,
              "duration": 267,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let User_Text = await driver.findElement(By.id('username-label')).getText();\nlet Email_Text = await driver.findElement(By.id('email-label')).getText();\nlet Pass_Text = await driver.findElement(By.id('password-label')).getText();\nlet CPass_Text = await driver.findElement(By.id('confirmPassword-label')).getText();\nlet REG_Btn = await driver.findElement(By.xpath(\"//button[text() = 'Register']\")).getText();\nexpect(User_Text).to.equal(\"Username\");\nexpect(Email_Text).to.equal(\"Email\");\nexpect(Pass_Text).to.equal(\"Password\");\nexpect(CPass_Text).to.include(\"Password\");\nexpect(REG_Btn).to.equal(\"REGISTER\");",
              "err": {},
              "uuid": "c1650c06-3552-4b22-b752-5604b1947e22",
              "parentUUID": "6b1d670e-22ec-4887-8e1e-f760fddef79e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "432f0c0d-6008-42fd-9bcc-bb272c2cc340",
            "c1650c06-3552-4b22-b752-5604b1947e22"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 677,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "4d26d65e-7463-413b-9ab8-17907148315d",
          "title": "TCs for the Registeration form data",
          "fullFile": "F:\\Testing2\\5_Final_Project2\\Final Project 2\\Code\\frontend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "usernames with < 3 characters are not allowed",
              "fullTitle": "TCs for the Registeration form data usernames with < 3 characters are not allowed",
              "timedOut": false,
              "duration": 586,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.findElement(By.id('username')).sendKeys(\"Y\");\nawait driver.findElement(By.xpath(\"//button[text() = 'Register']\")).click();\nlet Err_Elem = await driver.wait(until.elementLocated(By.xpath(\"//div[@class = 'error-banner']\")), 5000);\nlet Err_Text = await Err_Elem.getText();\nexpect(Err_Text).to.be.include(\"3 characters\");",
              "err": {},
              "uuid": "a9bbbd49-233a-4a3f-98fd-8ba821c94634",
              "parentUUID": "4d26d65e-7463-413b-9ab8-17907148315d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate if User can Register without Email",
              "fullTitle": "TCs for the Registeration form data Validate if User can Register without Email",
              "timedOut": false,
              "duration": 2562,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(`${url}/`);\n       await driver.sleep(100); \n       await driver.findElement(By.linkText('REGISTER')).click();\n       await driver.sleep(100); \n       await driver.findElement(By.xpath(\"//input[@id = 'username']\")).sendKeys(\"Yazan\");\n       await driver.findElement(By.xpath(\"//input[@id = 'password']\")).sendKeys(\"12345678\");\n       await driver.findElement(By.xpath(\"//input[@id = 'confirmPassword']\")).sendKeys(\"12345678\");\n       await driver.findElement(By.xpath(\"//button[text() = 'Register']\")).click();\n       \n       let Error_Elem = await driver.wait(until.elementIsVisible(driver.findElement(By.xpath(\"//div[@class = 'error-banner']\"))), 5000);\n       let Error_Text = await Error_Elem.getText();\n       expect(Error_Text).to.be.include(\"failed\")",
              "err": {},
              "uuid": "07624b59-74c0-4c42-937f-bc63b5b66237",
              "parentUUID": "4d26d65e-7463-413b-9ab8-17907148315d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Trying to Register with already Existing Username",
              "fullTitle": "TCs for the Registeration form data Trying to Register with already Existing Username",
              "timedOut": false,
              "duration": 2789,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(`${url}/`);\nawait driver.sleep(100); \nawait driver.findElement(By.xpath(\"//a[text() = 'Register']\")).click();\nawait driver.sleep(100); \nawait driver.findElement(By.xpath(\"//input[@id = 'username']\")).sendKeys(\"Yazan\");\nawait driver.findElement(By.xpath(\"//input[@id = 'email']\")).sendKeys(\"yazan@edges.com\");\nawait driver.findElement(By.xpath(\"//input[@id = 'password']\")).sendKeys(\"1234567888\");\nawait driver.findElement(By.xpath(\"//input[@id = 'confirmPassword']\")).sendKeys(\"1234567888\");\nawait driver.findElement(By.xpath(\"//button[text() = 'Register']\")).click();\n\nlet Error_Elem = await driver.wait(until.elementIsVisible(driver.findElement(By.xpath(\"//div[@class = 'error-banner']\"))), 5000);\nlet Error_Text = await Error_Elem.getText();\nexpect(Error_Text).to.be.include(\"failed\")",
              "err": {},
              "uuid": "17db5fd4-ba47-4426-89c6-9298ffebdde7",
              "parentUUID": "4d26d65e-7463-413b-9ab8-17907148315d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Try to Register without Password",
              "fullTitle": "TCs for the Registeration form data Try to Register without Password",
              "timedOut": false,
              "duration": 1719,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(`${url}/`);\nawait driver.sleep(100); \nawait driver.findElement(By.xpath(\"//a[text() = 'Register']\")).click();\nawait driver.sleep(100); \nawait driver.findElement(By.xpath(\"//input[@id = 'username']\")).sendKeys(\"Yazan\");\nawait driver.findElement(By.xpath(\"//input[@id = 'email']\")).sendKeys(\"yazan@edges.com\");\nawait driver.findElement(By.xpath(\"//button[text() = 'Register']\")).click();\nlet Error_Elem = await driver.wait(until.elementIsVisible(driver.findElement(By.xpath(\"//div[@class = 'error-banner']\"))), 5000);\nlet Error_Text = await Error_Elem.getText();\nexpect(Error_Text).to.be.include(\"required\");",
              "err": {},
              "uuid": "3fec5660-3910-4bcc-b353-ef1056dc7d1c",
              "parentUUID": "4d26d65e-7463-413b-9ab8-17907148315d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Try to Register without Password Confirmation",
              "fullTitle": "TCs for the Registeration form data Try to Register without Password Confirmation",
              "timedOut": false,
              "duration": 1983,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(`${url}/`);\nawait driver.sleep(100); \nawait driver.findElement(By.xpath(\"//a[text() = 'Register']\")).click();\nawait driver.sleep(100); \nawait driver.findElement(By.xpath(\"//input[@id = 'username']\")).sendKeys(\"Yazan\");\nawait driver.findElement(By.xpath(\"//input[@id = 'email']\")).sendKeys(\"yazan@edges.com\");\nawait driver.findElement(By.xpath(\"//input[@id = 'password']\")).sendKeys(\"0123456789\");\nawait driver.findElement(By.xpath(\"//button[text() = 'Register']\")).click();\nlet Error_Elem = await driver.wait(until.elementIsVisible(driver.findElement(By.xpath(\"//div[@class = 'error-banner']\"))), 5000);\nlet Error_Text = await Error_Elem.getText();\nexpect(Error_Text).to.be.include(\"match\");",
              "err": {},
              "uuid": "2236a23e-3083-432e-ad15-04d1025d3787",
              "parentUUID": "4d26d65e-7463-413b-9ab8-17907148315d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Try to Register with Password < 8 characters",
              "fullTitle": "TCs for the Registeration form data Try to Register with Password < 8 characters",
              "timedOut": false,
              "duration": 2176,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(`${url}/`);\nawait driver.sleep(100); \nawait driver.findElement(By.xpath(\"//a[text() = 'Register']\")).click();\nawait driver.sleep(100); \nawait driver.findElement(By.xpath(\"//input[@id = 'username']\")).sendKeys(\"Hasan\");\nawait driver.findElement(By.xpath(\"//input[@id = 'email']\")).sendKeys(\"Hasan@edges.com\");\nawait driver.findElement(By.xpath(\"//input[@id = 'password']\")).sendKeys(\"001122\");\nawait driver.findElement(By.xpath(\"//input[@id = 'confirmPassword']\")).sendKeys(\"001122\");\nawait driver.findElement(By.xpath(\"//button[text() = 'Register']\")).click();\nlet Error_Elem = await driver.wait(until.elementIsVisible(driver.findElement(By.xpath(\"//div[@class = 'error-banner']\"))), 5000);\nlet Error_Text = await Error_Elem.getText();\nexpect(Error_Text).to.be.include(\"characters\");",
              "err": {},
              "uuid": "ff624733-6a86-4087-89ad-4698fd6d8fee",
              "parentUUID": "4d26d65e-7463-413b-9ab8-17907148315d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Try to Register with wrong Password Confirmation",
              "fullTitle": "TCs for the Registeration form data Try to Register with wrong Password Confirmation",
              "timedOut": false,
              "duration": 2464,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(`${url}/`);\nawait driver.sleep(100); \nawait driver.findElement(By.xpath(\"//a[text() = 'Register']\")).click();\nawait driver.sleep(100); \nawait driver.findElement(By.xpath(\"//input[@id = 'username']\")).sendKeys(\"Hasan\");\nawait driver.findElement(By.xpath(\"//input[@id = 'email']\")).sendKeys(\"Hasan@edges.com\");\nawait driver.findElement(By.xpath(\"//input[@id = 'password']\")).sendKeys(\"0011223344\");\nawait driver.findElement(By.xpath(\"//input[@id = 'confirmPassword']\")).sendKeys(\"001122334\");\nawait driver.findElement(By.xpath(\"//button[text() = 'Register']\")).click();\nlet Error_Elem = await driver.wait(until.elementIsVisible(driver.findElement(By.xpath(\"//div[@class = 'error-banner']\"))), 5000);\nlet Error_Text = await Error_Elem.getText();\nexpect(Error_Text).to.be.include(\"match\");",
              "err": {},
              "uuid": "ce4d8f77-fcef-440d-afae-089dffa6c250",
              "parentUUID": "4d26d65e-7463-413b-9ab8-17907148315d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Try to Register with Invalid username like '@#$%'",
              "fullTitle": "TCs for the Registeration form data Try to Register with Invalid username like '@#$%'",
              "timedOut": false,
              "duration": 2906,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/* BUG, to test it enter unassigned credentials*/\n       await driver.get(`${url}/`);\n       await driver.sleep(500); \n       await driver.findElement(By.xpath(\"//a[text() = 'Register']\")).click();\n       await driver.findElement(By.xpath(\"//input[@id = 'username']\")).sendKeys(\"@@@##$$%%\");\n       await driver.findElement(By.xpath(\"//input[@id = 'email']\")).sendKeys(\"3aLLLaawwiiii@edges.com\");\n       await driver.findElement(By.xpath(\"//input[@id = 'password']\")).sendKeys(\"HAHAHAH001122334\");\n       await driver.findElement(By.xpath(\"//input[@id = 'confirmPassword']\")).sendKeys(\"HAHAHAH001122334\");\n       await driver.findElement(By.xpath(\"//button[text() = 'Register']\")).click();\n       let Error_Elem = await driver.wait(until.elementLocated(By.xpath(\"//h5[text() = 'Login']\")), 5000);\n       let Error_Text = await Error_Elem.getText();\n       expect(Error_Text).to.be.eq(\"Login\");",
              "err": {},
              "uuid": "19003b7e-894b-4c6f-b20a-58dd2d02eb8b",
              "parentUUID": "4d26d65e-7463-413b-9ab8-17907148315d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Moving Back from register page to Home page",
              "fullTitle": "TCs for the Registeration form data Moving Back from register page to Home page",
              "timedOut": false,
              "duration": 1186,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(`${url}/`);\nawait driver.sleep(100); \nawait driver.findElement(By.xpath(\"//a[text() = 'Register']\")).click();\nawait driver.sleep(100); \nawait driver.findElement(By.xpath(\"//a[text() = 'Home']\")).click();\nlet Login_Elem = await driver.wait(until.elementLocated(By.xpath(\"//h5[text() = 'Login']\")), 5000);\nlet Login_Text = await Login_Elem.getText();\nexpect(Login_Text).to.be.eq(\"Login\");",
              "err": {},
              "uuid": "eda63588-5251-409a-bb31-8c5405153a60",
              "parentUUID": "4d26d65e-7463-413b-9ab8-17907148315d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Trying to Register without Username",
              "fullTitle": "TCs for the Registeration form data Trying to Register without Username",
              "timedOut": false,
              "duration": 2024,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(`${url}/`);\nawait driver.sleep(100); \nawait driver.findElement(By.xpath(\"//a[text() = 'Register']\")).click();\nawait driver.sleep(100); \nawait driver.findElement(By.xpath(\"//input[@id = 'email']\")).sendKeys(\"Hasan@edges.com\");\nawait driver.findElement(By.xpath(\"//input[@id = 'password']\")).sendKeys(\"ZoZ00112233\");\nawait driver.findElement(By.xpath(\"//input[@id = 'confirmPassword']\")).sendKeys(\"ZoZ0011223\");\nawait driver.findElement(By.xpath(\"//button[text() = 'Register']\")).click();\nlet Error_Elem = await driver.wait(until.elementIsVisible(driver.findElement(By.xpath(\"//div[@class = 'error-banner']\"))), 5000);\nlet Error_Text = await Error_Elem.getText();\nexpect(Error_Text).to.be.include(\"required\");",
              "err": {},
              "uuid": "7731c39d-09cc-4830-93bd-6ce5027e1bca",
              "parentUUID": "4d26d65e-7463-413b-9ab8-17907148315d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a9bbbd49-233a-4a3f-98fd-8ba821c94634",
            "07624b59-74c0-4c42-937f-bc63b5b66237",
            "17db5fd4-ba47-4426-89c6-9298ffebdde7",
            "3fec5660-3910-4bcc-b353-ef1056dc7d1c",
            "2236a23e-3083-432e-ad15-04d1025d3787",
            "ff624733-6a86-4087-89ad-4698fd6d8fee",
            "ce4d8f77-fcef-440d-afae-089dffa6c250",
            "19003b7e-894b-4c6f-b20a-58dd2d02eb8b",
            "eda63588-5251-409a-bb31-8c5405153a60",
            "7731c39d-09cc-4830-93bd-6ce5027e1bca"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 20395,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "d43dc752-0695-48b6-8531-3c861f9ffd86",
          "title": "TCs as a User",
          "fullFile": "F:\\Testing2\\5_Final_Project2\\Final Project 2\\Code\\frontend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate if user can login & RSVP to the event",
              "fullTitle": "TCs as a User Validate if user can login & RSVP to the event",
              "timedOut": false,
              "duration": 1947,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/* This TC is developed as it passes for both conditions:\n   1 -> the User has not RSVP yet   \n   2 -> the User has already RSVPed,\n   so to control the result you can control the credentials for RSVPed User | Non-RSVPed User :)                                                */\nawait driver.get(`${url}/`);\nlet Email_Elem = await driver.wait(until.elementLocated(By.xpath(\"//input[@type='text']\")), 5000);\nawait Email_Elem.sendKeys(\"test@edges.com\");\nawait driver.findElement(By.xpath(\"//input[@type='password']\")).sendKeys(\"test1234\");\nawait driver.findElement(By.xpath(\"//button[text()='Login']\")).click();\n    \nawait driver.sleep(200);\nlet RSVP_Button_Exists = await driver.findElements(By.xpath(\"//button[text()='RSVP']\"));\n\nif (RSVP_Button_Exists.length > 0) {\n    await RSVP_Button_Exists[0].click();\n    \n    let RSVP_Done_Eleme = await driver.wait(until.elementLocated(By.xpath(\"//p[text()='You have RSVPed to this event.']\")), 5000);\n    let RSVP_Done_Text  = await RSVP_Done_Eleme.getText();\n    expect(RSVP_Done_Text).to.include(\"RSVPed\");\n} else {\n    let Already_RSVPed_Eleme = await driver.findElement(By.xpath(\"//p[text()='You have RSVPed to this event.']\"));\n    let Already_RSVPed_Text  = await Already_RSVPed_Eleme.getText();\n    expect(Already_RSVPed_Text).to.include(\"RSVPed\");\n}",
              "err": {},
              "uuid": "6ec5f8cb-4f13-4fe5-b502-ad49d0614cb9",
              "parentUUID": "d43dc752-0695-48b6-8531-3c861f9ffd86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "After logging in, Home button will never move us to another page",
              "fullTitle": "TCs as a User After logging in, Home button will never move us to another page",
              "timedOut": false,
              "duration": 396,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let Home_Elem = await driver.wait(until.elementLocated(By.xpath(\"//a[text() = 'Home']\")), 5000);\nawait Home_Elem.click();\nlet Logout_Elem = await driver.findElement(By.xpath(\"//button[text() = 'Logout']\"));\nlet Logout_Text = await Logout_Elem.getText();\nexpect(Logout_Text).to.be.eq(\"LOGOUT\");",
              "err": {},
              "uuid": "290700d2-4370-4260-a5bc-c17a1e86f649",
              "parentUUID": "d43dc752-0695-48b6-8531-3c861f9ffd86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User can logout",
              "fullTitle": "TCs as a User User can logout",
              "timedOut": false,
              "duration": 367,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let LO_Elem = await driver.wait(until.elementLocated(By.xpath(\"//button[text() = 'Logout']\")), 5000);\nawait LO_Elem.click();\nlet Login_Elem = await driver.wait(until.elementLocated(By.xpath(\"//h5[text() = 'Login']\")), 5000);\nlet Login_Text = await Login_Elem.getText();\nexpect(Login_Text).to.be.eq(\"Login\")",
              "err": {},
              "uuid": "f1e7e21b-d69a-40ca-8df6-9c44d1f129aa",
              "parentUUID": "d43dc752-0695-48b6-8531-3c861f9ffd86",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6ec5f8cb-4f13-4fe5-b502-ad49d0614cb9",
            "290700d2-4370-4260-a5bc-c17a1e86f649",
            "f1e7e21b-d69a-40ca-8df6-9c44d1f129aa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2710,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        },
        {
          "uuid": "5f60a408-c5b1-443c-9488-d189ac612b0f",
          "title": "TCs as an admin",
          "fullFile": "F:\\Testing2\\5_Final_Project2\\Final Project 2\\Code\\frontend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"TCs as an admin\"",
              "fullTitle": "TCs as an admin \"after all\" hook in \"TCs as an admin\"",
              "timedOut": false,
              "duration": 404,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "3b96f1a4-8850-4159-bd74-4f7ad25d363e",
              "parentUUID": "5f60a408-c5b1-443c-9488-d189ac612b0f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Admin can create an event",
              "fullTitle": "TCs as an admin Admin can create an event",
              "timedOut": false,
              "duration": 4413,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(`${url}/`)\nlet Email_Elem = await driver.wait(until.elementLocated(By.xpath(\"//input[@type='text']\")), 5000);\nawait Email_Elem.sendKeys(\"yazan@edges.com\");\nawait driver.findElement(By.xpath(\"//input[@type='password']\")).sendKeys(\"yazan123\");\nawait driver.findElement(By.xpath(\"//button[text()='Login']\")).click();\n    \nlet Dash_Elem = await driver.wait(until.elementLocated(By.xpath(\"//a[text() = 'Dashboard']\")), 5000);\nawait Dash_Elem.click();\nlet Name_Elem = await driver.wait(until.elementLocated(By.xpath(\"//input[@type = 'text']\")), 5000);\nawait Name_Elem.sendKeys(\"Test Event\");\nawait driver.findElement(By.xpath(\"//textarea[@name = 'description']\")).sendKeys(\"Test Description\");\nawait driver.findElement(By.xpath(\"//input[@name = 'date']\")).sendKeys(\"01032025\");\nawait driver.findElement(By.xpath(\"//input[@name = 'time']\")).sendKeys(\"1200A\");\nawait driver.findElement(By.xpath(\"//input[@name = 'location']\")).sendKeys(\"6th of October\");\nawait driver.findElement(By.xpath(\"//button[text() = 'Create Event']\")).click();\nlet Event_Elem = await driver.wait(until.elementLocated(By.xpath(\"//h6[text() = 'Test Event']\")), 5000);\nlet Event_Text = await Event_Elem.getText();\nexpect(Event_Text).to.be.eq(\"Test Event\");",
              "err": {},
              "uuid": "00c610d8-9692-4772-9428-af14d8169fc9",
              "parentUUID": "5f60a408-c5b1-443c-9488-d189ac612b0f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User can not create event with missing Event Name",
              "fullTitle": "TCs as an admin User can not create event with missing Event Name",
              "timedOut": false,
              "duration": 2183,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let Dash_Elem = await driver.wait(until.elementLocated(By.xpath(\"//a[text() = 'Dashboard']\")), 5000);\nawait Dash_Elem.click();\nlet Name_Elem = await driver.wait(until.elementLocated(By.xpath(\"//input[@type = 'text']\")), 5000);\nawait driver.findElement(By.xpath(\"//textarea[@name = 'description']\")).sendKeys(\"Test Description\");\nawait driver.findElement(By.xpath(\"//input[@name = 'date']\")).sendKeys(\"01032025\");\nawait driver.findElement(By.xpath(\"//input[@name = 'time']\")).sendKeys(\"1200A\");\nawait driver.findElement(By.xpath(\"//input[@name = 'location']\")).sendKeys(\"6th of October\");\nawait driver.findElement(By.xpath(\"//button[text() = 'Create Event']\")).click();\nawait driver.sleep(200);\nlet Error_Message = await Name_Elem.getAttribute(\"validationMessage\");\nexpect(Error_Message).to.include(\"fill out\");",
              "err": {},
              "uuid": "7ac9c32f-1249-441e-a68a-35fb51713b18",
              "parentUUID": "5f60a408-c5b1-443c-9488-d189ac612b0f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User can not create event with missing Event Description",
              "fullTitle": "TCs as an admin User can not create event with missing Event Description",
              "timedOut": false,
              "duration": 2179,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.navigate().refresh();\nlet Name_Elem = await driver.wait(until.elementLocated(By.xpath(\"//input[@type = 'text']\")), 5000);\nawait Name_Elem.sendKeys(\"Event Test\");\nlet Des_Elem = await driver.findElement(By.xpath(\"//textarea[@name = 'description']\"));\nawait driver.findElement(By.xpath(\"//input[@name = 'date']\")).sendKeys(\"01032025\");\nawait driver.findElement(By.xpath(\"//input[@name = 'time']\")).sendKeys(\"1200A\");\nawait driver.findElement(By.xpath(\"//input[@name = 'location']\")).sendKeys(\"6th of October\");\nawait driver.findElement(By.xpath(\"//button[text() = 'Create Event']\")).click();\nawait driver.sleep(200);\nlet Error_Message = await Des_Elem.getAttribute(\"validationMessage\");\nexpect(Error_Message).to.include(\"fill out\");",
              "err": {},
              "uuid": "c5499ac6-0cd0-40c6-a9ab-99cc61825462",
              "parentUUID": "5f60a408-c5b1-443c-9488-d189ac612b0f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User can not create event with missing Date",
              "fullTitle": "TCs as an admin User can not create event with missing Date",
              "timedOut": false,
              "duration": 2278,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.navigate().refresh();\nlet Name_Elem = await driver.wait(until.elementLocated(By.xpath(\"//input[@type = 'text']\")), 5000);\nawait Name_Elem.sendKeys(\"Event Test\");\nawait driver.findElement(By.xpath(\"//textarea[@name = 'description']\")).sendKeys(\"Event Test\");\nlet Date_Elem = await driver.findElement(By.xpath(\"//input[@name = 'date']\"));\nawait driver.findElement(By.xpath(\"//input[@name = 'time']\")).sendKeys(\"1200A\");\nawait driver.findElement(By.xpath(\"//input[@name = 'location']\")).sendKeys(\"6th of October\");\nawait driver.findElement(By.xpath(\"//button[text() = 'Create Event']\")).click();\nawait driver.sleep(200);\nlet Error_Message = await Date_Elem.getAttribute(\"validationMessage\");\nexpect(Error_Message).to.include(\"fill out\");",
              "err": {},
              "uuid": "6135d826-36a3-433a-923c-381daae942b5",
              "parentUUID": "5f60a408-c5b1-443c-9488-d189ac612b0f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User can not create event with missing Time",
              "fullTitle": "TCs as an admin User can not create event with missing Time",
              "timedOut": false,
              "duration": 2466,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.navigate().refresh();\nlet Name_Elem = await driver.wait(until.elementLocated(By.xpath(\"//input[@type = 'text']\")), 5000);\nawait Name_Elem.sendKeys(\"Event Test\");\nawait driver.findElement(By.xpath(\"//textarea[@name = 'description']\")).sendKeys(\"Event Test\");\nawait driver.findElement(By.xpath(\"//input[@name = 'date']\")).sendKeys(\"01032025\");\nlet Time_Elem = await driver.findElement(By.xpath(\"//input[@name = 'time']\"));\nawait driver.findElement(By.xpath(\"//input[@name = 'location']\")).sendKeys(\"6th of October\");\nawait driver.findElement(By.xpath(\"//button[text() = 'Create Event']\")).click();\nawait driver.sleep(200);\nlet Error_Message = await Time_Elem.getAttribute(\"validationMessage\");\nexpect(Error_Message).to.include(\"fill out\");",
              "err": {},
              "uuid": "c4e51e68-b258-4e84-aebe-1c9d294cec9e",
              "parentUUID": "5f60a408-c5b1-443c-9488-d189ac612b0f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User can not create event with missing Location",
              "fullTitle": "TCs as an admin User can not create event with missing Location",
              "timedOut": false,
              "duration": 2139,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.navigate().refresh();\nlet Name_Elem = await driver.wait(until.elementLocated(By.xpath(\"//input[@type = 'text']\")), 5000);\nawait Name_Elem.sendKeys(\"Event Test\");\nawait driver.findElement(By.xpath(\"//textarea[@name = 'description']\")).sendKeys(\"Event Test\");\nawait driver.findElement(By.xpath(\"//input[@name = 'date']\")).sendKeys(\"01032025\");;\nawait driver.findElement(By.xpath(\"//input[@name = 'time']\")).sendKeys(\"1200A\");\nlet Location_Elem = await driver.findElement(By.xpath(\"//input[@name = 'location']\"));\nawait driver.findElement(By.xpath(\"//button[text() = 'Create Event']\")).click();\nawait driver.sleep(200);\nlet Error_Message = await Location_Elem.getAttribute(\"validationMessage\");\nexpect(Error_Message).to.include(\"fill out\");",
              "err": {},
              "uuid": "0741dcec-7da6-4bc9-87b2-1711aec244c1",
              "parentUUID": "5f60a408-c5b1-443c-9488-d189ac612b0f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User can not create event with Invalid Date",
              "fullTitle": "TCs as an admin User can not create event with Invalid Date",
              "timedOut": false,
              "duration": 2463,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.navigate().refresh();\nlet Name_Elem = await driver.wait(until.elementLocated(By.xpath(\"//input[@type = 'text']\")), 5000);\nawait Name_Elem.sendKeys(\"Event Test\");\nawait driver.findElement(By.xpath(\"//textarea[@name = 'description']\")).sendKeys(\"Event Test\");\nlet Date_Elem = await driver.findElement(By.xpath(\"//input[@name = 'date']\"));\nawait Date_Elem.sendKeys(\"0103\");\nawait driver.findElement(By.xpath(\"//input[@name = 'time']\")).sendKeys(\"1200A\");\nawait driver.findElement(By.xpath(\"//input[@name = 'location']\")).sendKeys(\"6th of October\");;\nawait driver.findElement(By.xpath(\"//button[text() = 'Create Event']\")).click();\nawait driver.sleep(200);\nlet Error_Message = await Date_Elem.getAttribute(\"validationMessage\");\nexpect(Error_Message).to.include(\"incomplete\");",
              "err": {},
              "uuid": "3fdaf781-f206-4ad8-b7b5-f780723c6645",
              "parentUUID": "5f60a408-c5b1-443c-9488-d189ac612b0f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User can not create event with Invalid Time",
              "fullTitle": "TCs as an admin User can not create event with Invalid Time",
              "timedOut": false,
              "duration": 2519,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.navigate().refresh();\nlet Name_Elem = await driver.wait(until.elementLocated(By.xpath(\"//input[@type = 'text']\")), 5000);\nawait Name_Elem.sendKeys(\"Event Test\");\nawait driver.findElement(By.xpath(\"//textarea[@name = 'description']\")).sendKeys(\"Event Test\");\nawait driver.findElement(By.xpath(\"//input[@name = 'date']\")).sendKeys(\"01032025\");;\nlet Time_Elem = await driver.findElement(By.xpath(\"//input[@name = 'time']\"));\nawait Time_Elem.sendKeys(\"1200\");\nawait driver.findElement(By.xpath(\"//input[@name = 'location']\")).sendKeys(\"6th of October\");;\nawait driver.findElement(By.xpath(\"//button[text() = 'Create Event']\")).click();\nawait driver.sleep(200);\nlet Error_Message = await Time_Elem.getAttribute(\"validationMessage\");\nexpect(Error_Message).to.include(\"incomplete\");",
              "err": {},
              "uuid": "fa187239-6dfa-4de1-ba2b-46c41cba902d",
              "parentUUID": "5f60a408-c5b1-443c-9488-d189ac612b0f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "00c610d8-9692-4772-9428-af14d8169fc9",
            "7ac9c32f-1249-441e-a68a-35fb51713b18",
            "c5499ac6-0cd0-40c6-a9ab-99cc61825462",
            "6135d826-36a3-433a-923c-381daae942b5",
            "c4e51e68-b258-4e84-aebe-1c9d294cec9e",
            "0741dcec-7da6-4bc9-87b2-1711aec244c1",
            "3fdaf781-f206-4ad8-b7b5-f780723c6645",
            "fa187239-6dfa-4de1-ba2b-46c41cba902d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 20640,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 40000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.1.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}